#define LEFT_MOTOR OUT_B
#define RIGHT_MOTOR OUT_A
#define MOTOR_POWER 100

#define ULTRASONIC_FRONT IN_1
#define FRONT_MIN_DISTANCE 20

#define ULTRASONIC_LEFT IN_4
#define LEFT_OBJECTIF 12
#define LEFT_C 4

#define FRONT_WAIT 700

#define SPIRALE_K 50

task main()
{
    float c, d, cmd_left, cmd_right, infinite_left = 0;
    SetSensorLowspeed(ULTRASONIC_FRONT);
    SetSensorLowspeed(ULTRASONIC_LEFT);

    while(1)
    {
        d = SensorUS(ULTRASONIC_LEFT);

        if(d > 2 * LEFT_OBJECTIF)
        {
            d = 2 * LEFT_OBJECTIF;
            infinite_left++;
        }
        else if(d < LEFT_OBJECTIF)
        {
            infinite_left = 0;
        }

        if(SensorUS(ULTRASONIC_FRONT) < FRONT_MIN_DISTANCE)
        {
            OnRev(LEFT_MOTOR, MOTOR_POWER / 2);
            OnFwd(RIGHT_MOTOR, MOTOR_POWER / 2);
            Wait(FRONT_WAIT);
        }
        else
        {
            c = (d - LEFT_OBJECTIF) * LEFT_C - infinite_left / SPIRALE_K;

            cmd_left = MOTOR_POWER - c;
            if(cmd_left > 120)
                cmd_left = 120;
            if(cmd_left < 0)
                cmd_left = 0;

            cmd_right = MOTOR_POWER + c;
            if(cmd_right > 120)
                cmd_right = 120;
            if(cmd_right < 0)
                cmd_right = 0;

            OnRev(LEFT_MOTOR, cmd_left);
            OnRev(RIGHT_MOTOR, cmd_right);
        }
    }
}
